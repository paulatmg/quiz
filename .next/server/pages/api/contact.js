"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/contact";
exports.ids = ["pages/api/contact"];
exports.modules = {

/***/ "serverless-mysql":
/*!***********************************!*\
  !*** external "serverless-mysql" ***!
  \***********************************/
/***/ ((module) => {

module.exports = require("serverless-mysql");

/***/ }),

/***/ "(api)/./pages/api/contact.js":
/*!******************************!*\
  !*** ./pages/api/contact.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var serverless_mysql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! serverless-mysql */ \"serverless-mysql\");\n/* harmony import */ var serverless_mysql__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(serverless_mysql__WEBPACK_IMPORTED_MODULE_0__);\n\nasync function handler(req, res) {\n    const body = req.body;\n    //const isEmailValid = validateEmail({ email: body.email });\n    //const isFNameValid = validateFName({ firstName: body.name });\n    //const isLNameValid = validateLName({ fullName: body.lastName });\n    //const isPWameValid = CheckPassword({ password: body.password });\n    // console.log(\"QUAL EMAIL:\", body.email);\n    // console.log(\"QUAL FIRST NAME:\", body.name);\n    // console.log(\"QUAL LAST NAME:\", body.lastName);\n    // console.log(\"QUAL PASSWORD:\", body.password);\n    console.log(\"O QUE TA CHEGANDO AQUI:\", body.subject);\n    // if (!isEmailValid || !isFNameValid || !isLNameValid || !isPWameValid) {\n    //     return res\n    //         .status(500)\n    //         .json({\n    //             msg: `Invalid fields: ${isEmailValid ? '' : 'email'},  ${isFNameValid ? '' : 'first name'}, ${isLNameValid ? '' : 'last name'}, ${isPWameValid ? '' : 'Wrong, try another password ...!'}`\n    //         });\n    // }\n    // const connection =  openConnection({ host: \"ebh2y8tqym512wqs.cbetxkdyhwsb.us-east-1.rds.amazonaws.com\", user: \"q2w01mu95z1r9p9x\", password: \"b3cthljmoxgfhpyt\", database: \"zgwqhx5rlwm7kj0u\" });\n    const connection = await openConnection({\n        host: \"ebh2y8tqym512wqs.cbetxkdyhwsb.us-east-1.rds.amazonaws.com\",\n        user: \"q2w01mu95z1r9p9x\",\n        password: \"b3cthljmoxgfhpyt\",\n        database: \"zgwqhx5rlwm7kj0u\"\n    });\n    console.log(\"CONNECTION\", connection);\n    console.log(\"FIIIIRST NAME::::\", body.subject);\n    //   const haha = `SELECT * FROM persons WHERE \\`FirstName\\` = '${body.name}'`;\n    //   console.log(\"QUERY\", haha);\n    //  const testing =  executeDBComand({ query: haha, connection });\n    //   const testing = await excuteQuery({ query: haha, connection: connection });\n    //const quizTest = `SELECT q.subject, q.question, a.quiz_id, a.description, a.is_correct FROM quiz q INNER JOIN answers a ON  a.quiz_id = q.id WHERE a.subject = '${req.body.subject}' AND a.level = '${req.body.level}'`\n    //const quizTest = `SELECT * FROM quiz WHERE subject = '${body.subject}'`;\n    const quizTest = `SELECT * FROM quiz.'${body.subject}', quiz.question, answers.quiz_id, answers.description, answers.is_correct FROM quiz INNER JOIN answers ON quiz.id = 3 AND answers.quiz_id = 3`;\n    //const quizTest = `SELECT * WHERE quiz.subject=${body.name}, quiz.question, answers.quiz_id FROM quiz INNER JOIN answers ON quiz.id = answers.quiz_id`;\n    const quizQuery = await excuteQuery({\n        query: quizTest,\n        connection: connection\n    });\n    // if (testing.length){\n    //     return \"ERRO\"\n    // }\n    console.log(\"quizTest:\", quizTest);\n    console.log(\"quizQuery:\", quizQuery);\n    // console.log(\"RESULTADO:\", testing);\n    await connection.end();\n    res.status(200).json(quizQuery);\n// res.status(200).json(testing);\n//AQUIIIIIII inserir no banco de dados!!!\n//const result = res.json();\n//return (`Is this your full name: ${result.name}, your last name: ${result.lastName}, your email: ${result.email} and you are from ${result.country}`);\n//return res.status(200).json({ name: `${body.name}`, lastName: `${body.lastName}`, email: `${body.email}`, password: `${body.password}`});\n// return <Link href=\"/familytree\"> It is everything ok, go to the next step! </Link>;\n};\nfunction validateEmail({ email  }) {\n    var validRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n    if (email.match(validRegex)) {\n        return true;\n    } else {\n        return false;\n    }\n}\nfunction validateFName({ firstName  }) {\n    if (/^[A-Za-z\\s]+$/.test(firstName)) return true;\n    else return false;\n}\nfunction validateLName({ lastName  }) {\n    if (/^[A-Za-z\\s]+$/.test(lastName)) return true;\n    else return false;\n}\nfunction CheckPassword({ password  }) {\n    var passw = /^[A-Za-z]\\w{7,14}$/;\n    if (password.match(passw)) {\n        return true;\n    } else {\n        //alert('Wrong, try another password ...!')\n        return false;\n    }\n}\n//  function openConnection({ host, user, password, database }) {\n//     var connection = mysql.createConnection({\n//         host: host,\n//         user: user,\n//         password: password,\n//         database: database\n//     });\n//     connection.connect();\n//     return connection;\n// }\n//  function executeDBComand({ query, connection }) {\n//     return new Promise((resolve, reject) => {\n//         connection.query(query, (error, results, fields) => {\n//             if (error) {\n//                 return reject(error.message);\n//             }\n//             return resolve(results)\n//         })\n//     })\n// }\n// export default async (req, res) => {\n//     try {\n//         console.log(\"req nom\", req.body)\n//       const result = await excuteQuery({\n//           query: 'INSERT INTO post(content) VALUES(?)',\n//           values: [req.body.content],\n//       });\n//       console.log( \"ttt\",result );\n//   } catch ( error ) {\n//       console.log( error );\n//   }\n//   };\nasync function openConnection({ host , user , password , database  }) {\n    const db = await serverless_mysql__WEBPACK_IMPORTED_MODULE_0___default()({\n        config: {\n            host: host,\n            database: database,\n            user: user,\n            password: password\n        }\n    });\n    db.connect();\n    return db;\n}\n;\nasync function excuteQuery({ query , connection  }) {\n    try {\n        return await connection.query(query);\n    } catch (error) {\n        return {\n            error\n        };\n    }\n}\n; // SELECT quiz.subject, quiz.question, answers.quiz_id\n // FROM quiz\n // INNER JOIN answers ON quiz.id=answers.quiz_id;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/contact.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/contact.js"));
module.exports = __webpack_exports__;

})();